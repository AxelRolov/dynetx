sudo: false

language: python

python:
  - "2.7"

cache:
  directories:
    - $HOME/.cache/pip

matrix:
  fast_finish: true

  include:
    - python: "2.7"
      env: PYTHON_VM=ipy OPTIONAL_DEPS=no

  allow_failures:
    - env: PYTHON_VM=ipy OPTIONAL_DEPS=no

addons:
  apt:
    packages:
    - libatlas-dev
    - libatlas-base-dev
    - liblapack-dev
    - gfortran
    - libsuitesparse-dev
    - libgdal-dev
    - graphviz
    - mono-devel

env:
  matrix:
    - OPTIONAL_DEPS=miniconda
    - OPTIONAL_DEPS=no

before_install:
  ### Prepare the system to install prerequisites or dependencies
  - pip install --upgrade pip
  - uname -a
  - printenv
  # Workaround for travis-ci/travis-ci#2683
  - if [[ "${OPTIONAL_DEPS}" == miniconda ]]; then
      if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
        wget http://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
      else
        wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      fi;
      bash miniconda.sh -b -p $HOME/miniconda;
      export PATH="$HOME/miniconda/bin:$PATH";
      hash -r;
      conda info -a;
      conda config --set always_yes yes --set changeps1 no;
      conda update -q conda;
    fi

  - if [[ "${PYTHON_VM}" == ipy ]]; then
      pushd ..;

      curl -L -o ipy-2.7-maint.zip https://github.com/IronLanguages/main/archive/ipy-2.7-maint.zip;
      unzip -q ipy-2.7-maint.zip;
      pushd main-ipy-2.7-maint;
      sed -i '708 s/pGroup/pGroup = null/' 'Languages/IronPython/IronPython.SQLite/c#sqlite/pcache1_c.cs';
      xbuild /p:Configuration=Release Solutions/IronPython.sln;
      export IPY="${PWD}/bin/Release/ipy.exe";
      export IRONPYTHONPATH="${PWD}/External.LCA_RESTRICTED/Languages/IronPython/27/Lib";
      popd;

      curl -L -o decorator-3.4.0.tar.gz https://pypi.python.org/packages/source/d/decorator/decorator-3.4.0.tar.gz;
      tar xf decorator-3.4.0.tar.gz;
      cp decorator-3.4.0/src/decorator.py "${IRONPYTHONPATH}";

      curl -L -o enum34-1.0.tar.gz https://pypi.python.org/packages/source/e/enum34/enum34-1.0.tar.gz;
      tar xf enum34-1.0.tar.gz;
      cp enum34-1.0/enum/enum.py "${IRONPYTHONPATH}";

      curl -L -o nose-1.3.4.tar.gz https://pypi.python.org/packages/source/n/nose/nose-1.3.4.tar.gz;
      tar xf nose-1.3.4.tar.gz;
      cp -R nose-1.3.4/nose "${IRONPYTHONPATH}";

      popd;
    fi

install:
  ### Install any prerequisites or dependencies necessary to run the build.
  - if [[ "${OPTIONAL_DEPS}" == miniconda ]]; then
      DEPS="pyyaml numpy scipy matplotlib Cython pandas pip";
      conda create -n test-environment python=$TRAVIS_PYTHON_VERSION $DEPS ;
      source activate test-environment;
      conda install gdal;
      echo "Testing that gdal installed ok by if osgeo imports";
      python -c "from osgeo import ogr;print('importing ogr worked')";
      if [[ "${TRAVIS_PYTHON_VERSION}" =~ "2.7" ]]; then
        pip install pygraphviz;
      fi;
      pip install pydot scikits.sparse lxml;
    fi
  - if [[ "${PYTHON_VM}" != ipy ]]; then
      pip install --upgrade nose coverage codecov;
      pip install nose-ignore-docstring;
    fi

notifications:
  email: false
